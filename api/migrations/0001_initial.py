# Generated by Django 5.2.1 on 2025-06-05 01:22

import api.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome_Categoria', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Recompensa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titulo_Recompensa', models.CharField(max_length=200)),
                ('Pontos', models.PositiveIntegerField(validators=[api.models.validate_pontos_positivos])),
                ('Descricao', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('Nome_Usuario', models.CharField(max_length=100, unique=True)),
                ('Email', models.EmailField(max_length=255, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Habito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome_Habito', models.CharField(max_length=200)),
                ('Descricao', models.TextField()),
                ('Frequencia', models.CharField(choices=[('diaria', 'Diária'), ('semanal', 'Semanal'), ('mensal', 'Mensal')], default='diaria', max_length=20)),
                ('Data_Criacao', models.DateTimeField(auto_now_add=True)),
                ('Usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habitos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tarefa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titulo_Tarefa', models.CharField(max_length=200)),
                ('Descricao', models.TextField()),
                ('Data_Limite', models.DateField(validators=[api.models.validate_data_limite])),
                ('Status_Tarefa', models.CharField(choices=[('pendente', 'Pendente'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída')], default='pendente', max_length=20)),
                ('Prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta')], default='media', max_length=20)),
                ('Data_Criacao', models.DateTimeField(auto_now_add=True)),
                ('Usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarefas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tarefa_Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.categoria')),
                ('Tarefa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tarefa')),
            ],
            options={
                'verbose_name': 'Tarefa-Categoria',
                'verbose_name_plural': 'Tarefas-Categorias',
                'unique_together': {('Tarefa', 'Categoria')},
            },
        ),
        migrations.AddField(
            model_name='tarefa',
            name='Categorias',
            field=models.ManyToManyField(related_name='tarefas', through='api.Tarefa_Categoria', to='api.categoria'),
        ),
        migrations.CreateModel(
            name='Usuario_Recompensa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Data_Conquista', models.DateTimeField(auto_now_add=True)),
                ('Recompensa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.recompensa')),
                ('Usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usuário-Recompensa',
                'verbose_name_plural': 'Usuários-Recompensas',
                'unique_together': {('Usuario', 'Recompensa')},
            },
        ),
        migrations.AddField(
            model_name='recompensa',
            name='Usuarios',
            field=models.ManyToManyField(related_name='recompensas', through='api.Usuario_Recompensa', to=settings.AUTH_USER_MODEL),
        ),
    ]
